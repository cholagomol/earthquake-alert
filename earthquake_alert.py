import os
import requests
from datetime import datetime
import pytz

USGS_API = "https://earthquake.usgs.gov/fdsnws/event/1/query"

def get_earthquake_data():
    params = {"format": "geojson", "starttime": "2025-03-29", "minmagnitude": 4.5, "limit": 1}
    response = requests.get(USGS_API, params=params)
    return response.json()

def get_color_for_magnitude(mag):
    """‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏µ‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡∏î‡∏±‡∏ö magnitude ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ú‡πà‡∏ô‡∏î‡∏¥‡∏ô‡πÑ‡∏´‡∏ß"""
    if mag >= 7.0:
        return 0xFF0000  # ‡∏™‡∏µ‡πÅ‡∏î‡∏á
    elif mag >= 6.0:
        return 0xFFA500  # ‡∏™‡∏µ‡∏™‡πâ‡∏°
    elif mag >= 5.0:
        return 0xFFFF00  # ‡∏™‡∏µ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏á
    else:
        return 0x00FF00  # ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß

def format_earthquake_time(iso_time):
    """‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏≠‡πà‡∏≤‡∏ô‡∏á‡πà‡∏≤‡∏¢ ‡πÄ‡∏ä‡πà‡∏ô '2025-03-29 14:30:00'"""
    time_obj = datetime.strptime(iso_time, "%Y-%m-%dT%H:%M:%S.%fZ")
    return time_obj.strftime("%d-%m-%Y %H:%M:%S")  # ‡∏õ‡∏£‡∏±‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°

def send_discord_message(message, color):
    """‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏õ‡∏¢‡∏±‡∏á Discord ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ Embed ‡πÅ‡∏•‡∏∞‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏™‡∏µ"""
    embed = {
        "embeds": [{
            "title": "‡πÅ‡∏ú‡πà‡∏ô‡∏î‡∏¥‡∏ô‡πÑ‡∏´‡∏ß‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô!",
            "description": message,
            "color": color
        }]
    }
    webhook_url = os.environ['DISCORD_WEBHOOK_URL']  # ‡πÉ‡∏ä‡πâ secrets ‡πÉ‡∏ô GitHub
    requests.post(webhook_url, json=embed)

def main():
    data = get_earthquake_data()
    quakes = data["features"]

    # ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÅ‡∏ú‡πà‡∏ô‡∏î‡∏¥‡∏ô‡πÑ‡∏´‡∏ß‡∏à‡∏≤‡∏Å‡πÉ‡∏´‡∏°‡πà‡∏™‡∏∏‡∏î‡πÑ‡∏õ‡πÄ‡∏Å‡πà‡∏≤‡∏™‡∏∏‡∏î
    quakes_sorted = sorted(quakes, key=lambda x: x["properties"]["time"], reverse=True)

    # ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ú‡πà‡∏ô‡∏î‡∏¥‡∏ô‡πÑ‡∏´‡∏ß‡∏ó‡∏µ‡πà‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏≠‡∏¢‡∏π‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á
    for quake in quakes_sorted:
        place = quake["properties"]["place"]
        mag = quake["properties"]["mag"]
        time = quake["properties"]["time"] / 1000  # ‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô millisecond (‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ö‡πà‡∏á‡∏î‡πâ‡∏ß‡∏¢ 1000 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ)
        formatted_time = format_earthquake_time(datetime.utcfromtimestamp(time).strftime('%Y-%m-%dT%H:%M:%S.%fZ'))

        color = get_color_for_magnitude(mag)
        message = f"üåç ‡πÅ‡∏ú‡πà‡∏ô‡∏î‡∏¥‡∏ô‡πÑ‡∏´‡∏ß‡∏Ç‡∏ô‡∏≤‡∏î {mag} ‡∏ó‡∏µ‡πà {place} ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠ {formatted_time}"
        send_discord_message(message, color)

if __name__ == "__main__":
    main()
